<div class="filter-sidebar sticky-top" style="top: 20px;">
    <div class="accordion shadow-sm rounded-3 overflow-hidden" id="filterAccordion">
        <!-- Categories Bölümü -->
        <div class="accordion-item border-0">
            <h2 class="accordion-header" id="headingCategories">
                <button class="accordion-button fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCategories" aria-expanded="true" aria-controls="collapseCategories">
                    <i class="fa-solid fa-bars text-primary me-2"></i> Kategori Seç
                </button>
            </h2>
            <div id="collapseCategories" class="accordion-collapse collapse show" aria-labelledby="headingCategories" data-bs-parent="#filterAccordion">
                <div class="accordion-body p-0">
                    @await Component.InvokeAsync("CategoriesFilter")
                </div>
            </div>
        </div>
        <!-- Filters Bölümü -->
        <div class="accordion-item border-0">
            <h2 class="accordion-header" id="headingFilters">
                <button class="accordion-button fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFilters" aria-expanded="true" aria-controls="collapseFilters">
                    <i class="fa-solid fa-filter text-primary me-2"></i> Filtrele
                </button>
            </h2>
            <div id="collapseFilters" class="accordion-collapse collapse show" aria-labelledby="headingFilters" data-bs-parent="#filterAccordion">
                <div class="accordion-body p-0">
                    <div class="card shadow-sm rounded-3 border-0 filter-card mb-0">
                        <div class="card-body p-4">
                            <h5 class="card-title mb-4 d-flex align-items-center">
                                <i class="fa-solid fa-sliders text-primary me-2"></i>
                                Ürün Filtreleri
                            </h5>

                            <form method="get" asp-action="Index" id="filterForm">
                                <input type="hidden" name="categoryId" value="@(Context.Request.Query["categoryId"])" />

                                <!-- Arama Kutusu -->
                                <div class="mb-4">
                                    <label for="searchTerm" class="form-label fw-semibold small text-secondary">
                                        <i class="fa-solid fa-search me-1"></i>Ürün Ara
                                    </label>
                                    <div class="input-group">
                                        <input type="text" class="form-control border-end-0" id="searchTerm" name="SearchTerm"
                                               placeholder="Ürün adı, açıklama..."
                                               value="@Context.Request.Query["SearchTerm"]">
                                        <button class="btn btn-outline-secondary border-start-0 bg-transparent" type="button" id="clearSearch">
                                            <i class="fa-solid fa-times"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="filter-section mb-4">
                                    <div class="filter-header d-flex align-items-center justify-content-between mb-3">
                                        <label class="form-label fw-semibold small text-secondary mb-0">
                                            <i class="fa-solid fa-tag me-1"></i>Fiyat Aralığı
                                        </label>
                                        <span class="d-flex align-items-center badge bg-light text-dark rounded-pill px-3 py-2">
                                            <span id="minPriceDisplay">@((string.IsNullOrEmpty(Context.Request.Query["MinPrice"]) ? "0" : Context.Request.Query["MinPrice"]))</span>
                                            <span class="mx-1">-</span>
                                            <span id="maxPriceDisplay">@((string.IsNullOrEmpty(Context.Request.Query["MaxPrice"]) ? "5000" : Context.Request.Query["MaxPrice"]))</span>
                                            <span class="ms-1">₺</span>
                                        </span>
                                    </div>
                                    <div id="priceRange" class="mb-3"></div>
                                    <div class="row g-2">
                                        <div class="col-6">
                                            <div class="input-group input-group-sm">
                                                <input type="number" class="form-control" id="minPrice" name="MinPrice"
                                                       placeholder="Min" value="@Context.Request.Query["MinPrice"]">
                                                <span class="input-group-text bg-light">₺</span>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="input-group input-group-sm">
                                                <input type="number" class="form-control" id="maxPrice" name="MaxPrice"
                                                       placeholder="Max" value="@Context.Request.Query["MaxPrice"]">
                                                <span class="input-group-text bg-light">₺</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="filter-section mb-4">
                                    <label class="form-label fw-semibold small text-secondary mb-3">
                                        <i class="fa-solid fa-building me-1"></i>Markalar
                                    </label>
                                    <div class="brand-list">
                                        <div class="form-check d-flex align-items-center mb-3">
                                            <input class="form-check-input" type="radio" name="Brand" id="brandAll" value=""
                                            @(string.IsNullOrEmpty(Context.Request.Query["Brand"]) ? "checked" : "")>
                                            <label class="form-check-label ms-2 w-100" for="brandAll">
                                                Tüm Markalar
                                            </label>
                                        </div>
                                        @{
                                            // Örnek olarak marka listesi ekledim, gerçek uygulamada veritabanından çekilmelidir
                                            var brands = new[] { "Apple", "Samsung", "Xiaomi", "Huawei", "Lenovo" };
                                            foreach (var brand in brands)
                                            {
                                                <div class="form-check d-flex align-items-center mb-3">
                                                    <input class="form-check-input" type="radio" name="Brand" id="brand@(brand)" value="@brand"
                                                    @(Context.Request.Query["Brand"] == brand ? "checked" : "")>
                                                    <label class="form-check-label ms-2 w-100 d-flex justify-content-between" for="brand@(brand)">
                                                        @brand
                                                        <span class="badge rounded-pill bg-light text-dark">24</span>
                                                    </label>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>

                                <div class="filter-section mb-4">
                                    <label class="form-label fw-semibold small text-secondary mb-3">
                                        <i class="fa-solid fa-star me-1"></i>Özellikler
                                    </label>
                                    <div class="features-list">
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input" type="checkbox" id="bestSellers" name="IsBestSeller" value="true"
                                            @(Context.Request.Query["IsBestSeller"] == "true" ? "checked" : "")>
                                            <label class="form-check-label ms-2" for="bestSellers">
                                                En Çok Satanlar
                                            </label>
                                        </div>
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input" type="checkbox" id="newArrivals" name="IsNewArrival" value="true"
                                            @(Context.Request.Query["IsNewArrival"] == "true" ? "checked" : "")>
                                            <label class="form-check-label ms-2" for="newArrivals">
                                                Yeni Gelenler
                                            </label>
                                        </div>
                                        <div class="form-check form-switch mb-3">
                                            <input class="form-check-input" type="checkbox" id="discountedItems" name="HasDiscount" value="true"
                                            @(Context.Request.Query["HasDiscount"] == "true" ? "checked" : "")>
                                            <label class="form-check-label ms-2" for="discountedItems">
                                                İndirimli Ürünler
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="d-grid gap-2">
                                    <button type="submit" class="btn btn-primary fw-medium">
                                        <i class="fa-solid fa-filter me-2"></i>Filtreleri Uygula
                                    </button>
                                    <a href="@Url.Action("Index")" class="btn btn-link text-secondary">
                                        <i class="fa-solid fa-rotate me-1"></i>Filtreleri Temizle
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Latest Products Bölümü -->
        <div class="accordion-item border-0">
            <h2 class="accordion-header" id="headingLatest">
                <button class="accordion-button fw-bold collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseLatest" aria-expanded="false" aria-controls="collapseLatest">
                    <i class="fa fa-box text-primary me-2"></i> Son Eklenen Ürünler
                </button>
            </h2>
            <div id="collapseLatest" class="accordion-collapse collapse" aria-labelledby="headingLatest" data-bs-parent="#filterAccordion">
                <div class="accordion-body p-0">
                    <div products="" number="3"></div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function() {
            // Fiyat aralık çubuğunu ayarla
            const minPrice = parseInt('@(string.IsNullOrEmpty(Context.Request.Query["MinPrice"]) ? "0" : Context.Request.Query["MinPrice"])');
            const maxPrice = parseInt('@(string.IsNullOrEmpty(Context.Request.Query["MaxPrice"]) ? "5000" : Context.Request.Query["MaxPrice"])');

            // NoUiSlider gibi bir kütüphane kullanılabilir, burada örnek kod:
            if (typeof noUiSlider !== 'undefined') {
                const priceRangeSlider = document.getElementById('priceRange');

                noUiSlider.create(priceRangeSlider, {
                    start: [minPrice, maxPrice],
                    connect: true,
                    step: 50,
                    range: {
                        'min': 0,
                        'max': 10000
                    },
                    format: {
                        to: function (value) {
                            return Math.round(value);
                        },
                        from: function (value) {
                            return Number(value);
                        }
                    }
                });

                priceRangeSlider.noUiSlider.on('update', function (values, handle) {
                    document.getElementById('minPriceDisplay').innerHTML = values[0];
                    document.getElementById('maxPriceDisplay').innerHTML = values[1];
                    document.getElementById('minPrice').value = values[0];
                    document.getElementById('maxPrice').value = values[1];
                });
            }

            // Arama kutusunu temizleme butonu
            $('#clearSearch').click(function() {
                $('#searchTerm').val('');
            });

            // Fiyat input alanları değiştiğinde
            $('#minPrice, #maxPrice').on('change', function() {
                updatePriceDisplay();
            });

            function updatePriceDisplay() {
                const min = $('#minPrice').val() || 0;
                const max = $('#maxPrice').val() || 5000;
                $('#minPriceDisplay').text(min);
                $('#maxPriceDisplay').text(max);

                // Eğer slider varsa, onu da güncelle
                if (typeof noUiSlider !== 'undefined' && $('#priceRange')[0].noUiSlider) {
                    $('#priceRange')[0].noUiSlider.set([min, max]);
                }
            }

            // Hover efektleri
            $('.form-check-label').hover(
                function() {
                    $(this).addClass('text-primary');
                },
                function() {
                    $(this).removeClass('text-primary');
                }
            );
        });
    </script>

    <style>
        .filter-section {
            position: relative;
            padding-bottom: 1rem;
            margin-bottom: 1rem;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

            .filter-section:last-of-type {
                border-bottom: none;
            }

        .form-check-input:checked {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }

        /* noUiSlider özelleştirmeleri - eğer kullanılırsa */
        .noUi-connect {
            background: var(--bs-primary);
        }

        .noUi-handle {
            border-radius: 50%;
            background: white;
            box-shadow: 0 0 0 2px var(--bs-primary);
            border: none;
        }

            .noUi-handle:before,
            .noUi-handle:after {
                display: none;
            }

        /* Hover efektleri */
        .form-check:hover {
            cursor: pointer;
        }

            .form-check:hover .form-check-label {
                color: var(--bs-primary);
            }

        /* Ek yuvarlak köşeler */
        .input-group, .form-control, .btn {
            border-radius: 0.5rem;
        }

            .input-group > .form-control {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }

            .input-group > .input-group-text,
            .input-group > .btn {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
    </style>
}